use java::util::Arrays as Arr

class Donut

impl Donut {
    fn main(args: [str]) {
        mut A, mut B := 0D
        z := [f64; 1760]{}
        b := [char; 1760]{}
        System.out.println("\u001b[2J")
        for ;; {
            Arr.fill(b, ' ')
            Arr.fill(z, 0D)
            for mut j := 0D; 6.28 > j; j = j + 0.07 {
                for mut i := 0D; 6.28 > i; i = i + 0.02 {
                    c, d, e, f, g, h, D, l, m, n, t :=
                        Math.sin(i),
                        Math.cos(j),
                        Math.sin(A),
                        Math.sin(j),
                        Math.cos(A),
                        d + 2,
                        1 / (c * h * e + f * g + 5),
                        Math.cos(i),
                        Math.cos(B),
                        Math.sin(B),
                        c * h * g - f * e
                    x, y, o, N :=
                        (40 + 30 * D * (l * h * m - t * n)) as i32,
                        (12 + 15 * D * (l * h * n + t * m)) as i32,
                        x + 80 * y,
                        (8 * ((f * e - c * d * g) * m - c * d * e - f * g - l * d * n)) as i32
                    if 22 > y && y > 0 && x > 0 && 80 > x && D > z[o] {
                        z[o] = D
                        b[o] = [char;]{'.', ',', '-', '~', ':', ';', '=', '!', '*', '#', '$', '@'}[Math.max(N, 0)]
                    }
                }
            }

            System.out.print("\u001b[H")
            for mut k := 0; 1761 > k; k++ {
                System.out.print(if k % 80 > 0 { b[k] } else { '\u000a' })
            }
            A = A + 0.04
            B = B + 0.02
        }
    }
}